{"version":3,"file":"static/js/307.c85f0926.chunk.js","mappings":"mVAGMA,EAASC,EAAAA,EAAAA,IAAH,yGAONC,EAAQD,EAAAA,EAAAA,GAAH,4GAOLE,EAAYF,EAAAA,EAAAA,IAAH,2GAOTG,EAAWH,EAAAA,EAAAA,IAAH,uFAMRI,EAAcJ,EAAAA,EAAAA,EAAH,kEAKXK,EAAkBL,EAAAA,EAAAA,GAAH,kGAMfM,EAAiBN,EAAAA,EAAAA,EAAH,mHAOdO,EAAYP,EAAAA,EAAAA,GAAH,oKAUTQ,GAAgBR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,4Q,SCqDnB,EA5FqB,WACnB,IAAMU,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,UACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KA2BA,IAzBAC,EAAAA,EAAAA,YAAU,WACJF,KACFG,EAAAA,EAAAA,IAAM,+CACNC,QAAQC,IAAIL,GAEf,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAMI,EAAa,IAAIC,gBACjBC,EAAU,mCAAG,6GAEIC,EAAAA,EAAAA,WAAoB,CAAEC,GAAIf,EAASW,WAAAA,IAFvC,UAGF,QADPK,EAFS,yDAIfZ,EAASY,GACTV,EAAS,MALM,kDAOfA,EAAS,EAAD,IAPO,0DAAH,qDAWhB,OADAO,IACO,WACLF,EAAWM,OACZ,CACF,GAAE,CAACjB,IAEU,OAAVG,EAAJ,CAIA,IACEe,EAMEf,EANFe,eACAC,EAKEhB,EALFgB,SACAC,EAIEjB,EAJFiB,YACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,aACAC,EACEpB,EADFoB,OAGF,OACE,iCACE,UAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,EAAE,OAAOC,MAAM,QAAnC,WACE,SAAC1C,EAAD,CACE2C,IAAG,0CAAqCR,GACxCS,IAAKX,EACLY,QAAQ,UAEV,UAAC1C,EAAD,YACE,SAACD,EAAD,UAAQ+B,KACR,2BACE,UAAC7B,EAAD,YACE,SAACC,EAAD,oBACA,wBACE,2BAAOyC,EAAAA,EAAAA,IAAYT,WAGvB,UAACjC,EAAD,YACE,SAACC,EAAD,4BACA,wBAAI0C,EAAAA,EAAAA,IAAYX,SAElB,UAAChC,EAAD,YACE,SAACC,EAAD,qBACA,wBAAI2C,EAAAA,EAAAA,IAAcV,YAGtB,SAAChC,EAAD,qBACA,SAACC,EAAD,UAAiB2B,WAGrB,UAAC1B,EAAD,CAAWyC,IAAKpC,EAAhB,WACE,yBACE,SAACJ,EAAD,CAAeyC,GAAG,OAAOC,OAAK,UAAOxC,EAASwC,OAA9C,qBAIF,yBACE,SAAC1C,EAAD,CAAeyC,GAAG,UAAUC,OAAK,UAAOxC,EAASwC,OAAjD,2BAKJ,SAAC,KAAD,CAAQC,QAASvC,MArDpB,CAwDF,C","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nconst Poster = styled.img`\n  display: block;\n  border-radius: 5px;\n  min-width: 340px;\n  height: 478px;\n`;\n\nconst Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 20px;\n  font-size: 30px;\n  line-height: 1.17;\n`;\n\nconst MovieInfo = styled.div`\n  padding: 15px;\n  text-align: start;\n  max-height: 472px;\n  min-width: 412px;\n`;\n\nconst InfoItem = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  min-width: 108px;\n`;\n\nconst InfoDetails = styled.p`\n  font-weight: 600;\n  min-width: 108px;\n`;\n\nconst AboutMovieTitle = styled.h3`\n  text-transform: uppercase;\n  margin-top: 20px;\n  margin-bottom: 8px;\n`;\n\nconst AboutMovieText = styled.p`\n  line-height: 1.67;\n  margin-bottom: 20px;\n  overflow-y: scroll;\n  max-height: 200px;\n`;\n\nconst LinksList = styled.ul`\n  position: sticky;\n  top: 35px;\n  display: flex;\n  background-color: #3f51b5;\n  height: 64px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst NavLinkStyled = styled(NavLink)`\n  padding: 5px;\n  font-size: 16px;\n  color: white;\n  border-radius: 10px;\n  &.active {\n    color: orange;\n  }\n\n  &:hover:not(.active),\n  &:focus:not(.active) {\n    color: orange;\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nexport {\n  Poster,\n  Title,\n  MovieInfo,\n  InfoItem,\n  InfoDetails,\n  AboutMovieTitle,\n  AboutMovieText,\n  LinksList,\n  NavLinkStyled,\n};\n","import { Box } from 'components/Box';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { formateDate, formateVote, formateGenres } from 'utils/formatting';\nimport theMovie from 'services/theMovie';\nimport {\n  Poster,\n  Title,\n  MovieInfo,\n  InfoItem,\n  InfoDetails,\n  AboutMovieTitle,\n  AboutMovieText,\n  LinksList,\n  NavLinkStyled,\n} from './MovieDetails.styled';\nimport { useRef } from 'react';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const linksRef = useRef();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (error) {\n      toast('Something went wrong. Please reload page...');\n      console.log(error);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getDetails = async () => {\n      try {\n        const data = await theMovie.getDetails({ id: movieId, controller });\n        if (data === null) return;\n        setMovie(data);\n        setError(null);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getDetails();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (movie === null) {\n    return;\n  }\n\n  const {\n    original_title,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n    genres,\n  } = movie;\n\n  return (\n    <>\n      <Box display=\"flex\" p=\"15px\" width=\"806px\">\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={original_title}\n          loading=\"lazy\"\n        />\n        <MovieInfo>\n          <Title>{original_title}</Title>\n          <ul>\n            <InfoItem>\n              <InfoDetails>Vote</InfoDetails>\n              <p>\n                <span>{formateVote(vote_average)}</span>\n              </p>\n            </InfoItem>\n            <InfoItem>\n              <InfoDetails>Release date</InfoDetails>\n              <p>{formateDate(release_date)}</p>\n            </InfoItem>\n            <InfoItem>\n              <InfoDetails>Genre</InfoDetails>\n              <p>{formateGenres(genres)}</p>\n            </InfoItem>\n          </ul>\n          <AboutMovieTitle>About</AboutMovieTitle>\n          <AboutMovieText>{overview}</AboutMovieText>\n        </MovieInfo>\n      </Box>\n      <LinksList ref={linksRef}>\n        <li>\n          <NavLinkStyled to=\"cast\" state={{ ...location.state }}>\n            Cast\n          </NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"reviews\" state={{ ...location.state }}>\n            Reviews\n          </NavLinkStyled>\n        </li>\n      </LinksList>\n      <Outlet context={linksRef} />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Poster","styled","Title","MovieInfo","InfoItem","InfoDetails","AboutMovieTitle","AboutMovieText","LinksList","NavLinkStyled","NavLink","location","useLocation","linksRef","useRef","movieId","useParams","useState","movie","setMovie","error","setError","useEffect","toast","console","log","controller","AbortController","getDetails","theMovie","id","data","abort","original_title","overview","poster_path","release_date","vote_average","genres","Box","display","p","width","src","alt","loading","formateVote","formateDate","formateGenres","ref","to","state","context"],"sourceRoot":""}